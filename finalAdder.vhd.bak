library ieee;
use ieee.std_logic_1164.all;

entity finalAdder is
port(	A,B: in std_logic_vector(31 downto 0); Cin: in std_logic;
		Sum: out std_logic_vector(31 downto 0);
		Carry_out: out std_logic);
end entity;

architecture dataflowFinalAdder of finalAdder is
component xorGate is 
	port(x,y: in std_logic; z : out std_logic);
end component xorGate;
component otherGate is 
	port(w,x,y: in std_logic; z : out std_logic);
end component otherGate;
signal G1,P1: std_logic_vector(31 downto 0); 
signal G2,P2: std_logic_vector(15 downto 0);
signal G3,P3: std_logic_vector(7 downto 0); 
signal G4,P4: std_logic_vector(3 downto 0);
signal G5,P5: std_logic_vector(1 downto 0); 
signal G6,P6: std_logic;
signal Carry: std_logic_vector(32 downto 0);

--TYPE  DATA_ARRAY  IS ARRAY (0 TO MEMSIZE-1 ) OF std_logic_vector(7 downto 0) ;
--SIGNAL mem : DATA_ARRAY; 

begin

G1_0: andGate port map(A(0),B(0),G1(0));
P1_0: xorGate port map(A(0),B(0),P1(0));
G1_1: andGate port map(A(1),B(1),G1(1));
P1_1: xorGate port map(A(1),B(1),P1(1));
G1_2: andGate port map(A(2),B(2),G1(2));
P1_2: xorGate port map(A(2),B(2),P1(2));
G1_3: andGate port map(A(3),B(3),G1(3));
P1_3: xorGate port map(A(3),B(3),P1(3));
G1_4: andGate port map(A(4),B(4),G1(4));
P1_4: xorGate port map(A(4),B(4),P1(4));
G1_5: andGate port map(A(5),B(5),G1(5));
P1_5: xorGate port map(A(5),B(5),P1(5));
G1_6: andGate port map(A(6),B(6),G1(6));
P1_6: xorGate port map(A(6),B(6),P1(6));
G1_7: andGate port map(A(7),B(7),G1(7));
P1_7: xorGate port map(A(7),B(7),P1(7));
G1_8: andGate port map(A(8),B(8),G1(8));
P1_8: xorGate port map(A(8),B(8),P1(8));
G1_9: andGate port map(A(9),B(9),G1(9));
P1_9: xorGate port map(A(9),B(9),P1(9));
G1_10: andGate port map(A(10),B(10),G1(10));
P1_10: xorGate port map(A(10),B(10),P1(10));
G1_11: andGate port map(A(11),B(11),G1(11));
P1_11: xorGate port map(A(11),B(11),P1(11));
G1_12: andGate port map(A(12),B(12),G1(12));
P1_12: xorGate port map(A(12),B(12),P1(12));
G1_13: andGate port map(A(13),B(13),G1(13));
P1_13: xorGate port map(A(13),B(13),P1(13));
G1_14: andGate port map(A(14),B(14),G1(14));
P1_14: xorGate port map(A(14),B(14),P1(14));
G1_15: andGate port map(A(15),B(15),G1(15));
P1_15: xorGate port map(A(15),B(15),P1(15));
G1_16: andGate port map(A(16),B(16),G1(16));
P1_16: xorGate port map(A(16),B(16),P1(16));
G1_17: andGate port map(A(17),B(17),G1(17));
P1_17: xorGate port map(A(17),B(17),P1(17));
G1_18: andGate port map(A(18),B(18),G1(18));
P1_18: xorGate port map(A(18),B(18),P1(18));
G1_19: andGate port map(A(19),B(19),G1(19));
P1_19: xorGate port map(A(19),B(19),P1(19));
G1_20: andGate port map(A(20),B(20),G1(20));
P1_20: xorGate port map(A(20),B(20),P1(20));
G1_21: andGate port map(A(21),B(21),G1(21));
P1_21: xorGate port map(A(21),B(21),P1(21));
G1_22: andGate port map(A(22),B(22),G1(22));
P1_22: xorGate port map(A(22),B(22),P1(22));
G1_23: andGate port map(A(23),B(23),G1(23));
P1_23: xorGate port map(A(23),B(23),P1(23));
G1_24: andGate port map(A(24),B(24),G1(24));
P1_24: xorGate port map(A(24),B(24),P1(24));
G1_25: andGate port map(A(25),B(25),G1(25));
P1_25: xorGate port map(A(25),B(25),P1(25));
G1_26: andGate port map(A(26),B(26),G1(26));
P1_26: xorGate port map(A(26),B(26),P1(26));
G1_27: andGate port map(A(27),B(27),G1(27));
P1_27: xorGate port map(A(27),B(27),P1(27));
G1_28: andGate port map(A(28),B(28),G1(28));
P1_28: xorGate port map(A(28),B(28),P1(28));
G1_29: andGate port map(A(29),B(29),G1(29));
P1_29: xorGate port map(A(29),B(29),P1(29));
G1_30: andGate port map(A(30),B(30),G1(30));
P1_30: xorGate port map(A(30),B(30),P1(30));
G1_31: andGate port map(A(31),B(31),G1(31));
P1_31: xorGate port map(A(31),B(31),P1(31));

G2_0: otherGate port map(G1(1),P1(1),G1(0),G2(0));
G2_1: otherGate port map(G1(3),P1(3),G1(2),G2(1));
G2_2: otherGate port map(G1(5),P1(5),G1(4),G2(2));
G2_3: otherGate port map(G1(7),P1(7),G1(6),G2(3));
G2_4: otherGate port map(G1(9),P1(9),G1(8),G2(4));
G2_5: otherGate port map(G1(11),P1(11),G1(10),G2(5));
G2_6: otherGate port map(G1(13),P1(13),G1(12),G2(6));
G2_7: otherGate port map(G1(15),P1(15),G1(14),G2(7));
G2_8: otherGate port map(G1(17),P1(17),G1(16),G2(8));
G2_9: otherGate port map(G1(19),P1(19),G1(18),G2(9));
G2_10: otherGate port map(G1(21),P1(21),G1(20),G2(10));
G2_11: otherGate port map(G1(23),P1(23),G1(22),G2(11));
G2_12: otherGate port map(G1(25),P1(25),G1(24),G2(12));
G2_13: otherGate port map(G1(27),P1(27),G1(26),G2(13));
G2_14: otherGate port map(G1(29),P1(29),G1(28),G2(14));
G2_15: otherGate port map(G1(31),P1(31),G1(30),G2(15));

P2_0: andGate port map(P1(0),P1(1),P2(0));
P2_1: andGate port map(P1(2),P1(3),P2(1));
P2_2: andGate port map(P1(4),P1(5),P2(2));
P2_3: andGate port map(P1(6),P1(7),P2(3));
P2_4: andGate port map(P1(8),P1(9),P2(4));
P2_5: andGate port map(P1(10),P1(11),P2(5));
P2_6: andGate port map(P1(12),P1(13),P2(6));
P2_7: andGate port map(P1(14),P1(15),P2(7));
P2_8: andGate port map(P1(16),P1(17),P2(8));
P2_9: andGate port map(P1(18),P1(19),P2(9));
P2_10: andGate port map(P1(20),P1(21),P2(10));
P2_11: andGate port map(P1(22),P1(23),P2(11));
P2_12: andGate port map(P1(24),P1(25),P2(12));
P2_13: andGate port map(P1(26),P1(27),P2(13));
P2_14: andGate port map(P1(28),P1(29),P2(14));
P2_15: andGate port map(P1(30),P1(31),P2(15));

G3_0: otherGate port map(G2(1) ,P2(1) ,G2(0) ,G3(0));
G3_1: otherGate port map(G2(3) ,P2(3) ,G2(2) ,G3(1));
G3_2: otherGate port map(G2(5) ,P2(5) ,G2(4) ,G3(2));
G3_3: otherGate port map(G2(7) ,P2(7) ,G2(6) ,G3(3));
G3_4: otherGate port map(G2(9) ,P2(9) ,G2(8) ,G3(4));
G3_5: otherGate port map(G2(11),P2(11),G2(10),G3(5));
G3_6: otherGate port map(G2(13),P2(13),G2(12),G3(6));
G3_7: otherGate port map(G2(15),P2(15),G2(14),G3(7));

P3_0: andGate port map(P2(0) ,P2(1) ,P3(0));
P3_1: andGate port map(P2(2) ,P2(3) ,P3(1));
P3_2: andGate port map(P2(4) ,P2(5) ,P3(2));
P3_3: andGate port map(P2(6) ,P2(7) ,P3(3));
P3_4: andGate port map(P2(8) ,P2(9) ,P3(4));
P3_5: andGate port map(P2(10),P2(11),P3(5));
P3_6: andGate port map(P2(12),P2(13),P3(6));
P3_7: andGate port map(P2(14),P2(15),P3(7));

G4_0: otherGate port map(G3(1),P3(1),G3(0),G4(0));
G4_1: otherGate port map(G3(3),P3(3),G3(2),G4(1));
G4_2: otherGate port map(G3(5),P3(5),G3(4),G4(2));
G4_3: otherGate port map(G3(7),P3(7),G3(6),G4(3));
 
P4_0: andGate port map(P3(0),P3(1),P4(0));
P4_1: andGate port map(P3(2),P3(3),P4(1));
P4_2: andGate port map(P3(4),P3(5),P4(2));
P4_3: andGate port map(P3(6),P3(7),P4(3));

G5_0: otherGate port map(G4(1),P4(1),G4(0),G5(0));
G5_1: otherGate port map(G4(3),P4(3),G4(2),G5(1));
 
P5_0: andGate port map(P4(0),P4(1),P5(0));
P5_1: andGate port map(P4(2),P4(3),P5(1));

G6_0: otherGate port map(G5(1),P5(1),G5(0),G6);
P6_0: andGate port map(P5(0),P5(1),P6);

--GP_CAL: gPCal port map(Cin,A,B,G1,P1,G2,P2,G3,P3,G4,P4,G5,P5,G6,P6);
Carry(0) <= Cin;
--carry_1: otherGate port map(G1(0),P1(0),Carry(0),Carry(1));
--carry_2: otherGate port map(G2(0),P2(0),Carry(0),Carry(2));
carry_3: otherGate port map(G1(2),P1(2),Carry(2),Carry(3));
--carry_4: otherGate port map(G3(0),P3(0),Carry(0),Carry(4));
carry_5: otherGate port map(G1(4),P1(4),Carry(4),Carry(5));
carry_6: otherGate port map(G2(2),P2(2),Carry(4),Carry(6));
carry_7: otherGate port map(G1(6),P1(6),Carry(6),Carry(7));
--carry_8: otherGate port map(G4(0),P4(0),Carry(0),Carry(8));
carry_9: otherGate port map(G1(8),P1(8),Carry(8),Carry(9));
carry_10: otherGate port map(G2(4),P2(4),Carry(8),Carry(10));
carry_11: otherGate port map(G1(10),P1(10),Carry(10),Carry(11));
carry_12: otherGate port map(G3(2),P3(2),Carry(8),Carry(12));
carry_13: otherGate port map(G1(12),P1(12),Carry(12),Carry(13));
carry_14: otherGate port map(G2(6),P2(6),Carry(12),Carry(14));
carry_15: otherGate port map(G1(14),P1(14),Carry(14),Carry(15));
--carry_16: otherGate port map(G5(0),P5(0),Carry(0),Carry(16));
carry_17: otherGate port map(G1(16),P1(16),Carry(16),Carry(17));
carry_18: otherGate port map(G2(8),P2(8),Carry(16),Carry(18));
carry_19: otherGate port map(G1(18),P1(18),Carry(18),Carry(19));
carry_20: otherGate port map(G3(4),P3(4),Carry(16),Carry(20));
carry_21: otherGate port map(G1(20),P1(20),Carry(20),Carry(21));
carry_22: otherGate port map(G2(10),P2(10),Carry(20),Carry(22));
carry_23: otherGate port map(G1(22),P1(22),Carry(22),Carry(23));
carry_24: otherGate port map(G4(2),P4(2),Carry(16),Carry(24));
carry_25: otherGate port map(G1(24),P1(24),Carry(24),Carry(25));
carry_26: otherGate port map(G2(12),P2(12),Carry(24),Carry(26));
carry_27: otherGate port map(G1(26),P1(26),Carry(26),Carry(27));
carry_28: otherGate port map(G3(6),P3(6),Carry(24),Carry(28));
carry_29: otherGate port map(G1(28),P1(28),Carry(28),Carry(29));
carry_30: otherGate port map(G2(14),P2(14),Carry(28),Carry(30));
carry_31: otherGate port map(G1(30),P1(30),Carry(30),Carry(31));

Carry(1) <= G1(0);
Carry(2) <= G2(0);
Carry(4) <= G3(0);
Carry(8) <= G4(0);
Carry(16) <= G5(0);
Carry_out <= G6;

sum_0: xorGate port map(P1(0),Carry(0),sum(0));
sum_1: xorGate port map(P1(1),Carry(1),sum(1));
sum_2: xorGate port map(P1(2),Carry(2),sum(2));
sum_3: xorGate port map(P1(3),Carry(3),sum(3));
sum_4: xorGate port map(P1(4),Carry(4),sum(4));
sum_5: xorGate port map(P1(5),Carry(5),sum(5));
sum_6: xorGate port map(P1(6),Carry(6),sum(6));
sum_7: xorGate port map(P1(7),Carry(7),sum(7));
sum_8: xorGate port map(P1(8),Carry(8),sum(8));
sum_9: xorGate port map(P1(9),Carry(9),sum(9));
sum_10: xorGate port map(P1(10),Carry(10),sum(10));
sum_11: xorGate port map(P1(11),Carry(11),sum(11));
sum_12: xorGate port map(P1(12),Carry(12),sum(12));
sum_13: xorGate port map(P1(13),Carry(13),sum(13));
sum_14: xorGate port map(P1(14),Carry(14),sum(14));
sum_15: xorGate port map(P1(15),Carry(15),sum(15));
sum_16: xorGate port map(P1(16),Carry(16),sum(16));
sum_17: xorGate port map(P1(17),Carry(17),sum(17));
sum_18: xorGate port map(P1(18),Carry(18),sum(18));
sum_19: xorGate port map(P1(19),Carry(19),sum(19));
sum_20: xorGate port map(P1(20),Carry(20),sum(20));
sum_21: xorGate port map(P1(21),Carry(21),sum(21));
sum_22: xorGate port map(P1(22),Carry(22),sum(22));
sum_23: xorGate port map(P1(23),Carry(23),sum(23));
sum_24: xorGate port map(P1(24),Carry(24),sum(24));
sum_25: xorGate port map(P1(25),Carry(25),sum(25));
sum_26: xorGate port map(P1(26),Carry(26),sum(26));
sum_27: xorGate port map(P1(27),Carry(27),sum(27));
sum_28: xorGate port map(P1(28),Carry(28),sum(28));
sum_29: xorGate port map(P1(29),Carry(29),sum(29));
sum_30: xorGate port map(P1(30),Carry(30),sum(30));
sum_31: xorGate port map(P1(31),Carry(31),sum(31));
end architecture;